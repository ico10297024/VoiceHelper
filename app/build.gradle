apply plugin: 'com.android.application'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.sunruncn.unitdemo"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        /*65535*/
        multiDexEnabled true
//        buildConfigField "String", "APP_ID", "\"11563705\""
//        buildConfigField "String", "API_KEY", "\"70APxwzdfvAMpBDMIzswTVbo\""
//        buildConfigField "String", "SECRET_KEY", "\"DtHKebPHeqj67kcaavsP6TLfbGYVh18x\""
        manifestPlaceholders = [
                APP_ID     : "11563705",
                API_KEY    : "70APxwzdfvAMpBDMIzswTVbo",
                SECRET_KEY : "DtHKebPHeqj67kcaavsP6TLfbGYVh18x",
                PGYER_APPID: "6346c15101c396b2f4fb61816bc42abb"]

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IGNOREUNKNOWN", "true"
        }
        debug {
            debuggable true
            buildConfigField "boolean", "IGNOREUNKNOWN", "false"
        }
    }
    /*jackson和RX必要配置,该配置需要设置到app的build中*/
    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    /*65535*/
    afterEvaluate {
        tasks.matching {
            it.name.startsWith('dex')
        }.each { dx ->
            if (dx.additionalParameters == null) {
                dx.additionalParameters = []
            }
            dx.additionalParameters += '--multi-dex' // enable multidex
            // optional
            // dx.additionalParameters += "--main-dex-list=$projectDir/<filename>".toString()
            // enable the main-dex-list
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    api 'com.alibaba:fastjson:1.2.47'
    //    api 'com.alibaba:fastjson:1.1.68.android'
    /* https://github.com/JakeWharton/butterknife */
    implementation 'com.jakewharton:butterknife:+'
    annotationProcessor 'com.jakewharton:butterknife-compiler:+'
    //65535
    api 'com.android.support:multidex:1.0.2'
    implementation project(':Ico')
    implementation project(':BdSpeech')
    implementation project(':BdTts')
}

/*同步support包版本*/
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.+'
            }
        }
    }
}
/*解决在编译时一个findbugs的编译报错*/
configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
}